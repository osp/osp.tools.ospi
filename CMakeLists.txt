PROJECT(ospi)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.0)

SET(CMAKE_BUILD_TYPE "Debug")

SET (VERSION_MAJOR "0")
SET (VERSION_MINOR "1")
SET (VERSION_PATCH "0")
SET (VERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
ADD_DEFINITIONS(-DOSPI_VERSION_MAJOR=${VERSION_MAJOR} 
		-DOSPI_VERSION_MINOR=${VERSION_MINOR} 
		-DOSPI_VERSION_PATCH=${VERSION_PATCH})
MESSAGE(STATUS "Building OSPImposition ${VERSION}")

IF(UNIX AND NOT APPLE)
	SET (CMAKE_INSTALL_PREFIX /usr/local CACHE PATH "Installation path")
	SET (OSPI_BIN bin )
ENDIF(UNIX AND NOT APPLE)

IF(APPLE)
	set( CMAKE_OSX_ARCHITECTURES i386 )
	ADD_DEFINITIONS( -DPLATFORM_APPLE )
ENDIF(APPLE)

IF(WIN32)
	SET (CMAKE_INSTALL_PREFIX c:/ospi CACHE PATH "Installation path")
	SET (OSPI_BIN "")
ENDIF(WIN32)

ADD_DEFINITIONS(-DPREFIX="${CMAKE_INSTALL_PREFIX}")
MESSAGE(STATUS "OSPImposition will be installed under ${CMAKE_INSTALL_PREFIX}")



SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/modules")

FIND_PACKAGE(Threads REQUIRED)

FIND_PACKAGE(LIBPODOFO REQUIRED)
IF(LIBPODOFO_FOUND)
	MESSAGE(STATUS "PoDoFo Library Found OK")
ENDIF(LIBPODOFO_FOUND)

SET(Boost_USE_STATIC_LIBS        ON)
SET(Boost_USE_MULTITHREADED      ON)
SET(Boost_USE_STATIC_RUNTIME    OFF)

FIND_PACKAGE(Boost REQUIRED COMPONENTS system filesystem)
IF(Boost_FOUND)
	MESSAGE(STATUS "Boost Found OK")
ENDIF(Boost_FOUND)

FIND_PACKAGE(CURL)
IF(CURL_FOUND)
	MESSAGE(STATUS "CURL Found OK")
	ADD_DEFINITIONS(-DWITH_CURL)
ENDIF(CURL_FOUND)

FIND_PACKAGE(GMP)
IF(GMP_FOUND)
	IF(WANT_GMP)
		MESSAGE(STATUS "GMP Found OK")
		ADD_DEFINITIONS(-DWITH_GMP)
	ELSE(WANT_GMP)
		MESSAGE(STATUS "GMP Found but not activated, pass -DWANT_GMP:BOOL=TRUE to cmake if you want to activate use of GMP.")
	ENDIF(WANT_GMP)
ENDIF(GMP_FOUND)


SET(JSON_DIR "jsoncpp")
SET(JSON_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/${JSON_DIR}")

ADD_SUBDIRECTORY(${JSON_DIR})
ADD_SUBDIRECTORY(src)

SET(CPACK_PACKAGE_VERSION_MAJOR ${VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${VERSION_PATCH})

INCLUDE(CPack)
